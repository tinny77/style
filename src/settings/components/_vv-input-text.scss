@use 'sass:map';

$vv-input-text: (
	--vv-input-padding-top: var(--spacing-sm),
	--vv-input-padding-right: var(--spacing-sm),
	--vv-input-padding-bottom: var(--spacing-sm),
	--vv-input-padding-left: var(--spacing-sm),
	display: flex,
	flex: 1,
	flex-direction: column,
	margin-bottom: var(--spacing-md),
	position: relative,
	element: (
		label: (
			_alias: 'label',
			display: block,
			font-size: var(--text-xs),
			color: var(--color-word-3),
			margin-bottom: var(--spacing-xs),
			white-space: nowrap,
			text-overflow: ellipsis,
			overflow: hidden,
			max-width: 100%,
		),
		wrapper: (
			position: relative,
			display: flex,
			align-items: center,
			flex: 1,
			overflow: hidden,
			background-color: var(--color-surface-1),
			will-change: background-color,
			transition: background-color 0.2s ease-in-out,
			pseudo: (
				before: (
					position: absolute,
					height: var(--spacing-1),
					inset: auto 0 0 0,
					background: var(--color-word-5),
				),
				after: (
					position: absolute,
					height: var(--spacing-2),
					inset: auto 0 0 0,
					background: var(--color-brand),
					transform: scaleX(0),
					transform-origin: left,
					will-change: transform,
					transition: transform 0.2s ease-in-out,
				),
			),
			state: (
				hover: (
					background-color: var(--color-surface-3),
				),
				focus-within: (
					background-color: var(--color-surface-2),
					pseudo: (
						after: (
							transform: scaleX(1),
						),
					),
				),
			),
		),
		icon: (
			_alias: ':where(svg, [data-icon])',
			margin: var(--spacing-sm),
			position: absolute,
			pointer-events: none,
		),
		icon-right: (
			_alias: 'input + :where(svg, [data-icon])',
			right: 0,
		),
		actions-group: (
			display: flex,
			flex-direction: column,
			position: absolute,
			right: 0,
			top: 0,
			bottom: var(--spacing-px),
		),
		action-chevron: (
			flex: 1,
			width: calc(1em + var(--spacing-sm) * 2),
			background-position: center var(--spacing-2),
			background-size: var(--text-14) auto,
			background-repeat: no-repeat,
			background-image:
				url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(#{hex-to-rgb($color-word)})' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E"),
			cursor: pointer,
			state: (
				hover: (
					background-color: var(--color-surface-4),
				),
				active: (
					background-color: var(--color-surface-5),
				),
			),
		),
		action-chevron-up: (
			transform: rotate(180deg),
		),
		input: (
			_alias: 'input',
			display: block,
			flex: 1,
			[padding]: var(--vv-input-padding-top) var(--vv-input-padding-right)
				var(--vv-input-padding-bottom) var(--vv-input-padding-left),
			min-height: var(--spacing-50),
			pseudo: (
				placeholder: (
					color: var(--color-word-4),
				),
				-webkit-calendar-picker-indicator: (
						position: absolute,
						padding: var(--spacing-sm),
						top: 0,
						right: 0,
						opacity: 0,
					),
				-webkit-search-cancel-button: (
						display: none,
					),
				-webkit-color-swatch-wrapper: (
						display: block,
						border: none,
						height: 100%,
						padding: 0,
					),
				-webkit-color-swatch: (
						display: block,
						border: none,
						height: var(--spacing-20),
						border-radius: var(--spacing-4),
					),
				-webkit-outer-spin-button: (
						display: none,
					),
				-webkit-inner-spin-button: (
						display: none,
					),
			),
			state: (
				disabled: (
					cursor: not-allowed,
				),
				readonly: (
					cursor: text,
				),
			),
		),
		hint: (
			_alias: 'small',
			display: block,
			font-size: var(--text-12),
			color: var(--color-word-4),
			padding-top: var(--spacing-8),
			padding-inline: var(--spacing-xs),
			white-space: nowrap,
			text-overflow: ellipsis,
			overflow: hidden,
			max-width: 100%,
		),
	),
	modifier: (
		icon-left: (
			--vv-input-padding-left: calc(var(--spacing-sm) * 2 + 1em),
		),
		icon-right: (
			--vv-input-padding-right: calc(var(--spacing-sm) * 2 + 1em),
		),
		valid: (
			element: (
				wrapper: (
					pseudo: (
						after: (
							background: var(--color-success),
							transform: scaleX(1),
						),
					),
				),
				hint: (
					color: var(--color-success),
				),
			),
		),
		invalid: (
			element: (
				wrapper: (
					pseudo: (
						after: (
							background: var(--color-danger),
							transform: scaleX(1),
						),
					),
				),
				hint: (
					color: var(--color-danger),
				),
				icon-right: (
					color: var(--color-danger),
				),
			),
		),
		loading: (
			element: (
				wrapper: (
					pseudo: (
						before: (
							height: 2px,
							background: var(--color-brand-lighten-5),
						),
						after: (
							animation: progress 2.2s infinite,
						),
					),
				),
			),
		),
		floating: (
			[margin-left]: var(--vv-input-padding-left),
			[margin-right]: var(--vv-input-padding-right),
			element: (
				wrapper: (
					[margin-left]: calc(var(--vv-input-padding-left) * -1),
					[margin-right]: calc(var(--vv-input-padding-right) * -1),
				),
				hint: (
					[margin-left]: calc(var(--vv-input-padding-left) * -1),
					[margin-right]: calc(var(--vv-input-padding-right) * -1),
				),
				label: (
					position: absolute,
					z-index: 1,
					pointer-events: none,
					font-size: inherit,
					[padding-top]: var(--vv-input-padding-top),
					[padding-bottom]: var(--vv-input-padding-bottom),
					padding-inline: 0,
					margin: 0,
					will-change: 'transform',
					transform-origin: left,
					transition: all 0.2s ease-in-out,
				),
				input: (
					pseudo: (
						placeholder: (
							opacity: 0,
						),
					),
				),
			),
			state: (
				focus-within: (
					element: (
						label: (
							transform: translateY(-1.2ch),
							font-size: var(--text-12),
						),
						input: (
							transform: translateY(0.85ch),
							pseudo: (
								placeholder: (
									opacity: 1,
								),
							),
						),
					),
				),
				dirty: (
					element: (
						label: (
							transform: translateY(-1.2ch),
							font-size: var(--text-12),
						),
						input: (
							transform: translateY(0.85ch),
							pseudo: (
								placeholder: (
									opacity: 1,
								),
							),
						),
					),
				),
			),
		),
	),
	state: (
		disabled: (
			opacity: 0.5,
		),
		readonly: (
			element: (
				wrapper: (
					pseudo: (
						after: (
							opacity: 0,
						),
					),
					state: (
						hover: (
							background-color: var(--color-surface-1),
						),
					),
				),
			),
		),
	),
) !default;

@keyframes progress {
	0% {
		transform: scaleX(0);
	}

	50% {
		transform: scaleX(1);
		transform-origin: left;
	}

	51% {
		transform: scaleX(1);
		transform-origin: center right;
	}

	100% {
		transform: scaleX(0);
		transform-origin: center right;
	}
}
